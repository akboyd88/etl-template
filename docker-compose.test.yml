version: '3'
services:
  postgres:
    image: "postgres"
    env_file:
      - ./env/test/database.env
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
  influxdb:
    image: influxdb:latest
    env_file:
      - ./env/test/influxdb.env
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
      - ./service_configs/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ./service_configs/influxdb/init:/docker-entrypoint-initdb.d
  kafka:
    image: confluentinc/cp-kafka:5.4.1
    ports:
      - "9093:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2182
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29094,PLAINTEXT_HOST://localhost:9093
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29094,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    ports:
      - "9182:2182"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2182
  etl-template:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "443:443"
      - "80:80"
    depends_on:
      - postgres
      - kafka
  sut:
    build:
      context: .
      dockerfile: test.Dockerfile
    command: /app_test/scripts/sh/run-qa.sh
    ports:
      - "8080:8080"
      - "443:443"
      - "80:80"
    depends_on:
      - postgres
      - kafka
volumes:
  database-data:
  influxdb-data:
